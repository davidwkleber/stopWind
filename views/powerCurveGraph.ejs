	
			
	<div id="powerCurveContainer" >
	</div>
	
	
<script type="text/javascript" src="/javascripts/JSON2CSV.js"></script>
<script type="text/javascript" src="/javascripts/JSON2TSV.js"></script>
	<script type="text/javascript" src="/lib/canvasJS/canvasjs.min.js"></script>
		
	
  	<div class="PCsaveDataButtonDiv">
		<button class="PCsaveDataButton" id="PCsaveDataButton" name="PCsaveDataButton" onclick="PCsaveDataFunction()">Save</button>
	</div>
	<div class="PCrecordButtonsDiv" name="PCrecordButtonsDiv" id="PCrecordButtonsDiv" >
	</div>

		<div class="PCrecordButtons"  id="PCrecordButtons" name="PCrecordButtons">
    <input type="checkbox" name="PCrecordButtons-checkbox" class="PCrecordButtons-checkbox" id="myPCrecordButtons" checked>
    <label class="PCrecordButtons-label" for="myPCrecordButtons">
        <span class="PCrecordButtons-inner"></span>
        <span class="PCrecordButtons-switch"></span>
    </label>
</div>
	<script type="text/javascript">

// window.onload = function () {
			var data = []; var dataSeries = { type: "scatter" };

		var chart = new CanvasJS.Chart("powerCurveContainer",
		{
			zoomEnabled: true,
			backgroundColor: null,
			title:{
				text: "Power Curve"
				},
				animationEnabled: true,
				axisX:{
					labelAngel: 30
				},
				axisY:{
					includeZero: false
				},
				
				data: data //random generator below
			});
			
			// chart.render();
	//	}
		
		var limit = 100000; //increase number of data Points by increasing this
		

		console.log("POWER CURVE GRAPH");
		var dataPoints = [];
		
		
		
		
	
		
			var dataItem;
			var lineGraphSocket = io.connect('http://127.0.0.1:1337');

			lineGraphSocket.on('connect', function (dataIn) {
					console.log('powerCurve client connected ');
			//		console.log('lineGraph connected data ' + data);

				
			jQuery(function ($) {
				lineGraphSocket.on('updateData', function (dataIn) {
			//	console.log('powerCurve update: ' + dataIn);
					dataItem = JSON.parse(dataIn);
					
						dataPoints.push({
							x: dataItem.power,
							y: dataItem.rpm
						});
					
				 dataSeries.dataPoints = dataPoints;
				data.push(dataSeries);
							chart.render();
});
				});
		});
		
				function PCsaveDataFunction() {
				//	console.log('record button in saveDataFunction is: '+$(".recordButtons-checkbox:checked").val());

			// if ( recordDataFlag === true ) {
			// 		stopRecordFunction()
			
	//		console.log('save data');
	//		console.log('recorded data saved: '+data);
			
		//	recordDataFlag = false;

			// $('#recordButton').css('background-color','#e8e8e8');
						
			// var json = JSON.stringify(data);
			var json = data;
		//	var blob = new Blob([json], {type: "application/json"});
			
			var tsv = JSON2TSV("["+json+"]");
			var blob = new Blob([tsv], {type: "application/csv"});
	
			var url = URL.createObjectURL(blob);
			
			var a = document.createElement('a');
			a.id = "saveDataLinkPlace";
			var date = new Date();
			var fileName = "PowerCurve_data."+date.getDate()+"-"+(date.getMonth()+1)+"-"+date.getFullYear()+" "+date.getHours()+"."+date.getMinutes()+".tsv";
			a.download = fileName;
			a.href = url;
			a.textContent = "Download data as JSON";
			
			saveAs(blob,fileName);
	
			data = [];
		}
		
		</script>

	
		
		
		
				