	
			
	<div id="powerCurveContainer" >
	</div>

  	<div class="PCsaveDataButtonDiv">
		<button class="PCsaveDataButton" id="PCsaveDataButton" name="PCsaveDataButton" onclick="PCsaveDataFunction()">Save</button>
	</div>
	<div class="PCrecordButtonsDiv" name="PCrecordButtonsDiv" id="PCrecordButtonsDiv" >
	</div>

		<div class="PCrecordButtons"  id="PCrecordButtons" name="PCrecordButtons">
    <input type="checkbox" name="PCrecordButtons-checkbox" class="PCrecordButtons-checkbox" id="myPCrecordButtons" checked>
    <label class="PCrecordButtons-label" for="myPCrecordButtons">
        <span class="PCrecordButtons-inner"></span>
        <span class="PCrecordButtons-switch"></span>
    </label>
</div>
	<script type="text/javascript" src="/lib/canvasJS/canvasjs.min.js"></script>
		
	<script type="text/javascript">
//	window.onload = function () {
			var data = []; var dataSeries = { type: "line" };
		var dataPoints = [];
		var chart = new CanvasJS.Chart("powerCurveContainer",
		{
			zoomEnabled: true,
			backgroundColor: null,
			title:{
				text: "Power Curve"
				},
				animationEnabled: true,
				axisX:{
					labelAngel: 30
				},
				axisY:{
					includeZero: false
				},
				
				data: data //random generator below
			});
			
			chart.render();
//		}
		
		var limit = 100000; //increase number of data Points by increasing this
		
	/* 
		var y = 0;
		var data = []; var dataSeries = { type: "line" };
		var dataPoints = [];
		for (var i = 0; i < limit; i += 1) {
			y += (Math.random() * 10 - 5);
			dataPoints.push({
				x: i - limit / 2,
				y: y
			});
		}
		
		dataSeries.dataPoints = dataPoints;
		data.push(dataSeries);
		*/
		console.log("POWER CURVE GRAPH");

		
		
		
		
	
		
			var dataItem;
			var lineGraphSocket = io.connect('http://127.0.0.1:1337');

			lineGraphSocket.on('connect', function (dataIn) {
					console.log('lineGraph client connected ');
			//		console.log('lineGraph connected data ' + data);

				
			jQuery(function ($) {
				lineGraphSocket.on('updateData', function (data) {
			//		console.log('lineGraph update: ' + data);
					dataItem = JSON.parse(dataIn);
					
						dataPoints.push({
							x: dataItem.power,
							y: dataItem.rpm
						});
					});
				 dataSeries.dataPoints = dataPoints;
				data.push(dataSeries)
							chart.render();

				});
		});
		</script>

	
		
		
		
				